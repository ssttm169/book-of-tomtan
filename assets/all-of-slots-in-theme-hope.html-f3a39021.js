import{_ as e,o,c,e as d}from"./app-b28ea471.js";const r={},l=d('<br><h2 id="主题插槽" tabindex="-1"><a class="header-anchor" href="#主题插槽" aria-hidden="true">#</a> 主题插槽</h2><ul><li><p><code>AutoLink</code>: <code>default</code>, <code>before</code>, <code>after</code></p></li><li><p><code>CommonWrapper</code>: <code>default</code>, <code>navbarStartBefore</code>, <code>navbarStartAfter</code>, <code>navbarCenterBefore</code>, <code>navbarCenterAfter</code>, <code>navbarEndBefore</code>, <code>navbarEndAfter</code>, <code>navScreenTop</code>, <code>navScreenBottom</code>, <code>sidebar</code>, <code>sidebarTop</code>, <code>sidebarBottom</code></p></li><li><p><code>HeroInfo</code>: <code>heroImage</code>, <code>heroInfo</code>, <code>heroBg</code></p><ul><li><code>heroInfo</code> 插槽将接收 <code>text</code> <code>tagline</code> 和 <code>isFullScreen</code> 属性。</li><li><code>heroImage</code> 插槽将接收 <code>image</code> <code>imageDark</code> <code>heroStyle</code> <code>alt</code> 和 <code>isFullScreen</code> 属性。</li><li><code>heroBg</code> 插槽将接收 <code>image</code> <code>bgStyle</code> 和 <code>isFullScreen</code> 属性。</li></ul></li><li><p><code>HomePage</code>: <code>top</code>, <code>center</code>, <code>bottom</code></p></li><li><p><code>NormalPage</code>: <code>top</code>, <code>contentBefore</code>, <code>contentAfter</code>, <code>bottom</code>, <code>tocBefore</code>, <code>tocAfter</code></p></li></ul><h2 id="博客插槽" tabindex="-1"><a class="header-anchor" href="#博客插槽" aria-hidden="true">#</a> 博客插槽</h2><ul><li><p><code>ArticleItem</code>: <code>title</code>, <code>cover</code>, <code>info</code>, <code>excerpt</code></p><ul><li><code>title</code> 插槽将接收 <code>title</code> <code>isEncrypted</code> 和 <code>type</code> 属性。</li><li><code>excerpt</code> 插槽将接收 <code>excerpt</code> 属性。</li><li><code>cover</code> 插槽将接收 <code>cover</code> 属性。</li><li><code>info</code> 插槽将接收 <code>info</code> 属性。</li></ul></li><li><p><code>BlogHero</code>: <code>heroBg</code>, <code>heroInfo</code></p><ul><li><code>heroInfo</code> 插槽将接收 <code>text</code> <code>tagline</code> <code>image</code> <code>imageDark</code> <code>heroStyle</code> <code>alt</code> 和 <code>isFullScreen</code> 属性。</li><li><code>heroBg</code> 插槽将接收 <code>image</code> <code>bgStyle</code> 和 <code>isFullScreen</code> 属性。</li></ul></li></ul><h2 id="导航栏插槽" tabindex="-1"><a class="header-anchor" href="#导航栏插槽" aria-hidden="true">#</a> 导航栏插槽</h2><ul><li><code>DropdownLink</code>: <code>title</code></li><li><code>NavActions</code>: <code>before</code>, <code>after</code></li><li><code>Navbar</code>: <code>startBefore</code>, <code>startAfter</code>, <code>centerBefore</code>, <code>centerAfter</code>, <code>endBefore</code>, <code>endAfter</code></li><li><code>NavbarBrand</code>: <code>default</code></li><li><code>NavScreen</code>: <code>before</code>, <code>after</code></li><li><code>NavScreenDropdown</code>: <code>before</code>, <code>after</code></li></ul><h2 id="侧边栏插槽" tabindex="-1"><a class="header-anchor" href="#侧边栏插槽" aria-hidden="true">#</a> 侧边栏插槽</h2><ul><li><code>Sidebar</code>: <code>top</code>, <code>default</code>, <code>bottom</code></li></ul><h2 id="toc-右边内容目录-插槽" tabindex="-1"><a class="header-anchor" href="#toc-右边内容目录-插槽" aria-hidden="true">#</a> TOC(右边内容目录)插槽</h2><ul><li><code>TOC</code>: <code>before</code>, <code>after</code></li></ul>',11),t=[l];function a(i,n){return o(),c("div",null,t)}const h=e(r,[["render",a],["__file","all-of-slots-in-theme-hope.html.vue"]]);export{h as default};
