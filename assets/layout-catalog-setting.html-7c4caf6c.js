import{_ as t,r as o,o as p,c as i,b as n,d as a,a as c,e as s}from"./app-b28ea471.js";const l="/project/vuepress-theme-hope/8.png.webp",r={},u=s(`<p>我们希望首页或者其他的列表页面自动展示新的文章, 并且以目录或层级的方式展示出来。这需要用到 vuepress-plugin-auto-catalog 这个组件.</p><h2 id="安装组件" tabindex="-1"><a class="header-anchor" href="#安装组件" aria-hidden="true">#</a> 安装组件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> vuepress-plugin-auto-catalog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 // .vuepress/config.ts 引用</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> autoCatalogPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-plugin-auto-catalog&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">autoCatalogPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">//插件选项</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="首页引入" tabindex="-1"><a class="header-anchor" href="#首页引入" aria-hidden="true">#</a> 首页引入</h2><p>在首页使用组件, 路径 docs/README.md</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoCatalog</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><p>看看效果, 真的可以自动展示所有文档。</p><p><img src="`+l+'" alt="图片" loading="lazy"></p><p>但是怎么都是上下排序的？怎么改成左右排序, 自动换行呢? 暂时无解<br><br></p><h2 id="局部引入" tabindex="-1"><a class="header-anchor" href="#局部引入" aria-hidden="true">#</a> 局部引入</h2>',14),d=n("br",null,null,-1),v={href:"https://book.itomtan.com/english-miniprogram/",target:"_blank",rel:"noopener noreferrer"},m=s(`<p>设置如下：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AutoCatalog</span> <span class="token attr-name">base</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/english-miniprogram/<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="排序目录" tabindex="-1"><a class="header-anchor" href="#排序目录" aria-hidden="true">#</a> 排序目录</h2>`,3);function g(k,h){const e=o("ExternalLinkIcon");return p(),i("div",null,[u,n("p",null,[a("但如果在需要展示部分的目录，比某个专栏或某个分目录的列表, 就需要加入 base属性。"),d,a(" 打比方 分目录的链接是 "),n("a",v,[a("https://book.itomtan.com/english-miniprogram/"),c(e)])]),m])}const _=t(r,[["render",g],["__file","layout-catalog-setting.html.vue"]]);export{_ as default};
